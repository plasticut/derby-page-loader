var chokidar = require('chokidar');
var fs = require('fs');
var path = require('path');

function StyleWriter(files, dest) {
    dest = path.resolve(dest);
    var i, l, imports, rel = path.dirname(dest);
    files = files.map(function(f) {
        return path.relative(rel, f);
    });

    imports = ['// AUTOGENERATED, DO NOT EDIT'];
    for (i=0, l=files.length; i<l; i++) {
        imports.push('@import \'' + files[i] + '\'');
    }
    this.dest = dest;
    this.imports = imports.join('\n');
    this.files = files;
    this.write(true);
}

StyleWriter.prototype.write = function(sync) {
    var rand = '\n//' + (new Date()).toString() + '\n';
    var _this = this;

    if (sync) {
        fs.writeFileSync(this.dest, this.imports + rand);
        console.log('Writed:', _this.dest);
        _this.watch();
    } else {
        fs.writeFile(this.dest, this.imports + rand, function(err) {
            if (err) { console.error('Write styles error:', err); }
            console.log('Writed:', _this.dest);
            _this.watch();
        });
    }
};

StyleWriter.prototype.watch = function() {
    var _this = this;
    var watcher = chokidar.watch(this.files);
    watcher.on('change', function() {
        watcher.close();
        _this.write();
    });
};

module.exports = function(app, options) {
    var comp, i, j;
    for (i=0, l=options.components.length; i<l; i++) {
        comp = options.components[i].prototype;
        if (comp.style) {
            options.styles.push(comp.style);
        }
    }

    new StyleWriter(options.styles, options.importStyle);
};